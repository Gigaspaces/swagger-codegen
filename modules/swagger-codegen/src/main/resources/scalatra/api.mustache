{{>licenseInfo}}

package {{package}}

{{#imports}}import {{import}}
{{/imports}}


import org.scalatra.{ TypedParamSupport, ScalatraServlet }
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{FileUploadSupport, MultipartConfig, SizeConstraintExceededException}

import scala.collection.JavaConverters._

class {{classname}} extends {{classname}}Support
    with FileUploadSupport
    with JacksonJsonSupport {
    override protected implicit val jsonFormats: Formats = DefaultFormats

  override protected val applicationDescription: String = "{{classname}}"
  override protected val applicationName: Option[String] = Some("{{basePathWithoutHost}}/{{baseName}}")

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
{{#operations}}
{{#operation}}
    {{newline}}
  def {{nickname}}({{#allParams}}{{paramName}}:{{>paramType}}{{#hasMore}}, {{/hasMore}}{{/allParams}}): Any = {
  }
{{/operation}}
{{/operations}}
}
